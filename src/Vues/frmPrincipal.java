/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vues;

import Entity.Agent;
import Entity.Client;
import Entity.Releve;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alex
 */
public class frmPrincipal extends javax.swing.JFrame {

    
    DefaultTableModel dtmAgents;
    DefaultTableModel dtmClients;
    DefaultTableModel dtmReleves;
    
    Vector v;
    
    ArrayList<Agent> mesAgents;
    /**
     * Creates new form frmPrincipal
     */
    public frmPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAgent = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblClient = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblReleve = new javax.swing.JTable();
        txtConso = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtReleve = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        dateChooser = new com.toedter.calendar.JDateChooser();
        btnInserer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblAgent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Nom"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAgent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAgentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAgent);

        tblClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Nom"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblClient);

        tblReleve.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Releve"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblReleve);

        jLabel1.setText("Consommation");

        jLabel2.setText("Liste des Clients");

        jLabel3.setText("Liste des Agents");

        jLabel4.setText("Liste des Relevés");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel5.setText("EDF");
        jLabel5.setMaximumSize(new java.awt.Dimension(30, 16));

        jLabel6.setText("Valeur du nouveau relevé");

        jLabel7.setText("Date du relevé");

        btnInserer.setText("Insérer");
        btnInserer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInsererMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtConso, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnInserer, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(txtReleve, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(dateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtConso, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1))))
                .addGap(18, 18, 18)
                .addComponent(txtReleve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnInserer)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
        Agent agent1 = new Agent(1, "Enzo");
        Agent agent2 = new Agent(2, "Noa");
        Agent agent3 = new Agent(3, "Lilou");
        
        Client client1 = new Client(1, "Martin");
        Client client2 = new Client(2, "Alison");
        Client client3 = new Client(3, "Gand");
        Client client4 = new Client(4, "Muller");
        Client client5 = new Client(5, "Fortin");
        Client client6 = new Client(6, "Garnier");
        Client client7 = new Client(7, "Cousinot");
        
        Releve releve1 = new Releve("2021-02-14", 345);
        Releve releve2 = new Releve("2021-07-21", 987);
        Releve releve3 = new Releve("2021-11-05", 1117);
        Releve releve4 = new Releve("2021-08-15", 546);
        Releve releve5 = new Releve("2021-11-05", 261);
        Releve releve6 = new Releve("2021-01-03", 784);
        Releve releve7 = new Releve("2021-04-13", 904);
        Releve releve8 = new Releve("2021-09-03", 1283);
        Releve releve9 = new Releve("2021-12-23", 1846);
        Releve releve10 = new Releve("2021-02-05", 371);
        Releve releve11 = new Releve("2021-06-11", 613);
        Releve releve12 = new Releve("2021-10-23", 1071);
        Releve releve13 = new Releve("2022-01-03", 14);
        
        client1.AjouterUnReleve(releve1);
        client1.AjouterUnReleve(releve2);
        client1.AjouterUnReleve(releve3);
        
        client2.AjouterUnReleve(releve4);
        
        client3.AjouterUnReleve(releve5);
        client3.AjouterUnReleve(releve6);
        
        client4.AjouterUnReleve(releve7);
        client4.AjouterUnReleve(releve8);
        client4.AjouterUnReleve(releve9);
        
        client5.AjouterUnReleve(releve10);
        client5.AjouterUnReleve(releve11);
        client5.AjouterUnReleve(releve12);
        
        client6.AjouterUnReleve(releve13);
        
        
        agent1.AjouterUnClient(client1);
        agent1.AjouterUnClient(client2);
        agent1.AjouterUnClient(client3);
        
        agent2.AjouterUnClient(client4);
        
        agent3.AjouterUnClient(client5);
        agent3.AjouterUnClient(client6);
        agent3.AjouterUnClient(client7);
        
        mesAgents = new ArrayList<>();
        mesAgents.add(agent1);
        mesAgents.add(agent2);
        mesAgents.add(agent3);
        
        dtmAgents = (DefaultTableModel) tblAgent.getModel();
        dtmClients = (DefaultTableModel) tblClient.getModel();
        dtmReleves = (DefaultTableModel) tblReleve.getModel();
        
        for (Agent agt : mesAgents)
        {
            v = new Vector();
            v.add(agt.getNumAgent());
            v.add(agt.getNomAgent());
            dtmAgents.addRow(v);
        }
        tblAgent.setModel(dtmAgents);
    }//GEN-LAST:event_formWindowOpened

    private void tblAgentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAgentMouseClicked
        // TODO add your handling code here:
        while(tblClient.getRowCount() != 0)
        {
            dtmClients.removeRow(0);
        }
        while(tblReleve.getRowCount() != 0)
        {
            dtmReleves.removeRow(0);
        }
        txtConso.setText("");
        
        int numAgentSelected = Integer.parseInt(tblAgent.getValueAt(tblAgent.getSelectedRow(), 0).toString());
        for(Agent agt : mesAgents)
        {
            if (agt.getNumAgent() == numAgentSelected)
            {
                for (Client c : agt.getSesClients())
                {
                    v = new Vector();
                    v.add(c.getNumClient());
                    v.add(c.getNomClient());
                    dtmClients.addRow(v);
                }
                tblClient.setModel(dtmClients);
            }
        }
    }//GEN-LAST:event_tblAgentMouseClicked

    private void tblClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientMouseClicked
        // TODO add your handling code here:
        while(tblReleve.getRowCount() != 0)
        {
            dtmReleves.removeRow(0);
        }
        int numAgentSelected = Integer.parseInt(tblAgent.getValueAt(tblAgent.getSelectedRow(), 0).toString());
        int numClientSelected = Integer.parseInt(tblClient.getValueAt(tblClient.getSelectedRow(), 0).toString());
        for(Agent agt : mesAgents)
        {
            if(agt.getNumAgent() == numAgentSelected)
            {
                for(Client c : agt.getSesClients())
                {
                    if(c.getNumClient() == numClientSelected)
                    {
                       for(Releve r : c.getSesReleves())
                       {
                           v = new Vector();
                           v.add(r.getDate());
                           v.add(r.getValeurReleve());
                           dtmReleves.addRow(v);
                       }
                       tblReleve.setModel(dtmReleves);
                       String conso = String.valueOf(c.CalculerConsomation());
                       txtConso.setText(conso);
                    }
                }
            }
        }
    }//GEN-LAST:event_tblClientMouseClicked

    private void btnInsererMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsererMouseClicked
        // TODO add your handling code here:
        Date dateVerif = dateChooser.getDate();
        if (txtReleve.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Il n'y a pas de nouvelle valeur inserer", "Pas de valeur", JOptionPane.ERROR_MESSAGE);
        }
        else if (dateVerif == null)
        {
            JOptionPane.showMessageDialog(null, "Il n'y a pas de nouvelle date inserer", "Pas de date", JOptionPane.ERROR_MESSAGE);
        }
        else if (tblClient.getSelectionModel().isSelectionEmpty())
        {
            JOptionPane.showMessageDialog(null, "Il n'y a pas de nouveau client selectioner", "Pas de client", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            String getNewReleve = txtReleve.getText();
            SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
            String date = dcn.format(dateChooser.getDate());
            Releve r = new Releve(date, Integer.parseInt(getNewReleve));
            int numAgentSelected = Integer.parseInt(tblAgent.getValueAt(tblAgent.getSelectedRow(), 0).toString());
            int numClientSelected = Integer.parseInt(tblClient.getValueAt(tblClient.getSelectedRow(), 0).toString());
            for(Agent agt : mesAgents)
            {
                if(agt.getNumAgent() == numAgentSelected)
                {
                    for(Client c : agt.getSesClients())
                    {
                        if(c.getNumClient() == numClientSelected)
                        {
                            if (!c.VerifierValeurNouveauReleve(Integer.parseInt(getNewReleve)))
                            {
                                JOptionPane.showMessageDialog(null, "Le nouveau releve est inferieur à l'ancienne", "Mauvaise valeur", JOptionPane.ERROR_MESSAGE);
                            }
                            else if (!c.VerifierNouvelleDate(date))
                            {
                                JOptionPane.showMessageDialog(null, "La nouvelle date est inferieur à l'ancienne", "Mauvaise valeur date", JOptionPane.ERROR_MESSAGE);
                            }
                            else
                            {
                                c.AjouterUnReleve(r);
                                v = new Vector();
                                v.add(r.getDate());
                                v.add(r.getValeurReleve());
                                dtmReleves.addRow(v);
                                tblReleve.setModel(dtmReleves);
                                String conso = String.valueOf(c.CalculerConsomation());
                                txtConso.setText(conso);
                            }
                            
                        }
                    }
                }
            }
        }        
    }//GEN-LAST:event_btnInsererMouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInserer;
    public com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblAgent;
    private javax.swing.JTable tblClient;
    private javax.swing.JTable tblReleve;
    public javax.swing.JTextField txtConso;
    public javax.swing.JTextField txtReleve;
    // End of variables declaration//GEN-END:variables
}
